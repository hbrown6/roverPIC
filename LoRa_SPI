/* 
 * File:   SPIMain.c
 * Author: hbrown6
 *
 * Created on November 19, 2019, 3:40 PM
 */

#include <stdio.h>
#include <stdlib.h>
#include <xc.h>
#include "config.h"

void spi_init(){
    TRISBbits.TRISB8 = 0;
    LATBbits.LATB8 = 1;
    
    TRISBbits.TRISB14 = 0;
    TRISFbits.TRISF4 = 0;
    TRISFbits.TRISF5 = 1;
    // SPI Pins
    // Disable Interrupts
    IEC1bits.SPI4EIE = 0;
    IEC1bits.SPI4RXIE = 0;
    IEC1bits.SPI4TXIE = 0;
    // Turn off the SPI during config
    SPI4CONbits.ON = 0;
    // Clear the SPI buffer
    SPI4BUF = 0;
    SPI4CONbits.ENHBUF = 0;
    SPI4BRG = 1;
    SPI4STATbits.SPIROV = 0;
    SPI4CONbits.FRMEN = 0;
    SPI4CONbits.FRMPOL = 0;
    SPI4CONbits.MSTEN = 1;      // Set master mode
    SPI4CONbits.MSSEN = 1;      // Set the slave select to work automatically
    SPI4CONbits.MODE16 = 1;
    SPI4CONbits.MODE32 = 0;
    SPI4CONbits.SMP = 1;
    SPI4CONbits.CKP = 0;
    SPI4CONbits.CKE = 0;
    SPI4CONbits.ON = 1;
    //TRISBbits.TRISB15 = 0;
    //LATBbits.LATB15 = 1;
    delay(13000);                   //delay 10 ms - waiting for LoRa to turn on-NEEDED
}

int spi_read(int reg_name){
    reg_name = reg_name & 0x7F;
    int shifter = 0x00;
    int shifted = (reg_name << 8) | shifter;
    SPI4BUF = shifted;                // Write to the buffer
    while (!SPI4STATbits.SPIRBF);
    return SPI4BUF;
}

int spi_write(int reg_name,int val){
    reg_name = reg_name | 0x80;
    int shifted = (reg_name << 8) | val;
    SPI4BUF = shifted;                // Write to the buffer
    while (!SPI4STATbits.SPIRBF);
    return SPI4BUF;
}

void delay(int ber){
    int num;
    for(num = 1; num < ber; num++);
}

int main(void) {
    spi_init();
    
    while(1){
        spi_write(0x01,0x02);       //(register,value)
        spi_write(0x01,0x02);
        while(1);
    };
    return 0;
}
